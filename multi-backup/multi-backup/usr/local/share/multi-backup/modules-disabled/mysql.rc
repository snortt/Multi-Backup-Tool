# 
# Resources for mult-backup system
# Gabriel Marques - gabriel.marques@rnp.br
# Wed May 25 11:43:25 BRT 2016
#

# ---------------- BACKUPS ROUTINES -----------------
# Function to create MySQL backup
backup_mysql() {
    # MySQL options. Change with care.

    # Read and parse command line 
    case "$1" in
        -[iI]) 
            _interactive=1 ;;
			*) 
    		_interactive=0 ;;
    esac

    # Checks if interactive and define passwd get method
    if [[ "$_interactive" == "1" ]]; then
        MYSQL_PASS="-p "
    else
        if [[ ! -f $MYSQL_PWF ]]; then
            echo -e "Error: file $MYSQL_PWF not found!" | tee -a $BKP_LOG
            echo -e "Aborted!" | tee -a $BKP_LOG
            echo -e "Create the $MYSQL_PWF file with MySQL admin password and chmod it to 0400, or use -i switch" | tee -a $BKP_LOG
            exit 103
        fi
        MYSQL_PASS="-p$(cat $MYSQL_PWF)"
    fi

    # Compose the authentication options
    MYSQL_AUTH="$MYSQL_USR $MYSQL_PASS"
    
    # Do the actual backup and compress it 
    echo -e "----------------------" | tee -a $BKP_LOG
    echo -e "Executing MySQL backup" | tee -a $BKP_LOG
	echo -e "Start time: $(date)"        | tee -a $BKP_LOG
    $MYSQLDUMP $MYSQL_AUTH $MYSQL_IP $MYSQLDUMP_OPTS > ${MYSQL_BKPFILE}
	cd $BASEDIR
	$COMPRESS $COMPRESS_OPT ${MYSQL_BKPFILE} >> $BKP_LOG 2>&1 && echo -e "MySQL: OK" | tee -a $BKP_LOG
	echo -e "End time: $(date)"        | tee -a $BKP_LOG	
	unset MYSQL_AUTH MYSQL_PASS 

	# Transfer backup to server
	backup_transfer ${MYSQL_BKPFILE}.${COMPRESS_EXT}
}

